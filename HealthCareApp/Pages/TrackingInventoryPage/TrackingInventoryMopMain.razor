@page "/tracking-inventory/mops"
@using HealthCareApp.Components.PageV2
@using HealthCareApp.Components.Message
@using HealthCareApp.Components.Toast
@using HealthCareApp.Components.Spinner
@using HealthCareApp.Settings.Enum
@*@implements IAsyncDisposable
@inject IJSRuntime JS*@

<AuthorizeView>
    <Authorized>

        <PageWrapper>

            <PageHeaderView>
                <PageHeaderWrapper Styles="">
                    <PageHeaderTitle Title="Mops"
                                     ParentTitle="Inventory"
                                     ParentLink="/tracking-inventory" />
                    <PageHeaderMenu>
                    </PageHeaderMenu>
                </PageHeaderWrapper>
            </PageHeaderView>

            <PageBodyView>
                <PageBodyWrapper Styles="mt-2">
                    <div class="container">
                        <div class="row align-items-center sticky-top hca-bg-default border-bottom pb-2">
                            <div class="col-sm-12 col-lg-6 bg-opacity-25 hca-bg-label-scan p-2 @(_isInputFocus ? "bg-info" : "bg-warning")">
                                <input type="text" class="form-control"
                                       placeholder="Scan label..."
                                       autocomplete="off"
                                       id="Barcode"
                                       @bind="_barcode"
                                       @onfocusin="SetInputFocusInAsync"
                                       @onfocusout="SetInputFocusOutAsync"
                                       @oninput="OnValueChanged" />

                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <button type="button"
                                        class="btn btn-primary w-140"
                                        @onclick="() => OpenModalPickupAsync()"
                                        disabled="@_isDisabled">
                                    @if (_isLoading)
                                    {
                                        <span>
                                            <Spinner Size="Size.sm" Color="Level.White" />
                                            Searching...
                                        </span>
                                    }
                                    else
                                    {
                                        <span>
                                            <i class="bi bi-clock pe-1"></i>
                                            Set time
                                        </span>
                                    }
                                </button>
                                <button type="button"
                                        class="btn btn-light btn-rounded"
                                        title="Calendar"
                                        @onclick="() => OpenModalDateRangeAsync()">
                                    <i class="bi bi-calendar-range"></i>
                                    Calendar
                                </button>
                                <button type="button"
                                        class="btn btn-outline-primary btn-rounded"
                                        title="Reports"
                                        @onclick="() => OpenModalDateRangeAsync()">
                                    <i class="bi bi-file-bar-graph"></i>
                                    Reports
                                </button>
                            </div>
                        </div>
                        <div class="row hca-data-list-body">
                            <div class="col-sm-12 g-0">
                                <div class="table-responsive">
                                    <table class="table table-md table-hover table-nowrap">
                                        <thead class="table-light">
                                            <tr>
                                                <th scope="col">Date</th>
                                                <th scope="col">Barcode</th>
                                                <th scope="col">Area</th>
                                                <th scope="col">Quantity</th>
                                                <th scope="col">Time</th>
                                                <th scope="col">Status</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <Virtualize Context="trackinInventoryMop"
                                                        ItemsProvider="@LoadTrackingInventoryMops"
                                                        @ref="_virtualizeContainer">
                                                <ItemContent>
                                                    <tr>
                                                        <td>
                                                            @trackinInventoryMop.PickupTime.Date.ToShortDateString()
                                                        </td>
                                                        <td>
                                                            @trackinInventoryMop.Barcode
                                                        </td>
                                                        <td>
                                                            @trackinInventoryMop.AreaName
                                                        </td>
                                                        <td>
                                                            @trackinInventoryMop.MopQuantity
                                                        </td>
                                                        <td>
                                                            @trackinInventoryMop.PickupTime.ToString("hh:mm tt")
                                                        </td>
                                                        <td>
                                                            Pending
                                                        </td>
                                                    </tr>
                                                    @*<div class="list-group-item list-group-item-action hca-list-group-item border-bottom">
                                                        <div class="row g-0"
                                                             role="button">
                                                            <div class="col-auto p-2">
                                                                @trackinInventoryMop.PickupTime.Date.ToShortDateString()
                                                            </div>
                                                            <div class="col-auto p-2">
                                                                @trackinInventoryMop.Barcode
                                                            </div>
                                                            <div class="col-auto p-2">
                                                                @trackinInventoryMop.AreaName
                                                            </div>
                                                            <div class="col-auto p-2">
                                                                @trackinInventoryMop.MopQuantity
                                                            </div>
                                                            <div class="col-auto p-2">
                                                                @trackinInventoryMop.PickupTime.ToString("hh:mm tt")
                                                            </div>
                                                            <div class="col-auto p-2">
                                                                @trackinInventoryMop.ReturnTime.ToString("hh:mm tt")
                                                            </div>
                                                        </div>
                                                    </div>*@
                                                </ItemContent>
                                                @*<Placeholder>
                                                    <Spinner Size="Size.md" />
                                                </Placeholder>*@
                                            </Virtualize>
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                </PageBodyWrapper>
            </PageBodyView>

            <PageFooterView />

        </PageWrapper>
        <TrackingInventoryMopModalPickup @ref="_trackingInventoryMopModalPickup" OnSubmitSuccess="RefreshVirtualizeContainer" />
        <Toast />
    </Authorized>
    <NotAuthorized>
        <NotAuthorizedMessage />
    </NotAuthorized>
</AuthorizeView>
